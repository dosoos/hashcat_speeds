name: Auto Update Benchmark Data

on:
  push:
    paths:
      - 'benchmarks/**'
    branches:
      - main

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Python environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Check benchmarks directory changes
      id: check_benchmarks
      run: |
        echo "🔍 Checking files in benchmarks directory..."
        echo "Current benchmarks directory contents:"
        ls -la benchmarks/
        echo "File count: $(ls benchmarks/*.txt 2>/dev/null | wc -l)"
        
        # Check if any new .txt files were added or modified
        changed_files=$(git diff --name-only HEAD~1 HEAD | grep '^benchmarks/.*\.txt$' || true)
        if [ -n "$changed_files" ]; then
          echo "✅ Detected changes in .txt files in benchmarks directory:"
          echo "$changed_files"
          echo "has_benchmark_changes=true" >> $GITHUB_OUTPUT
        else
          echo "ℹ️ No changes detected in .txt files in benchmarks directory"
          echo "has_benchmark_changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Run data generation script
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true'
      run: |
        echo "🚀 Starting gendata.py execution..."
        python gendata.py
        echo "✅ gendata.py execution completed"

    - name: Check for file changes
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true'
      id: check_changes
      run: |
        echo "🔍 Checking for file changes..."
        git status --porcelain
        if [ -n "$(git status --porcelain)" ]; then
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "📝 Detected file changes:"
          git diff --name-only
        else
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No file changes detected"
        fi

    - name: Configure Git user
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true' && steps.check_changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Commit changes
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true' && steps.check_changes.outputs.has_changes == 'true'
      run: |
        git add .
        git commit -m "🤖 Auto update benchmark data

        - Detected new benchmark files in benchmarks directory
        - Automatically ran gendata.py to generate latest data
        - Updated pages/datas.json and charts in images/ directory

        Generated by GitHub Actions on $(date '+%Y-%m-%d %H:%M:%S')"

    - name: Push to main branch
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true' && steps.check_changes.outputs.has_changes == 'true'
      run: |
        echo "📤 Pushing changes to main branch..."
        git push origin main
        echo "✅ Push completed"

    - name: Display update results
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'true'
      run: |
        if [ "${{ steps.check_changes.outputs.has_changes }}" == "true" ]; then
          echo "✅ Data successfully updated and committed to main branch"
          echo "📊 Updated files:"
          git diff --name-only HEAD~1 HEAD
          echo ""
          echo "🎉 Automation workflow completed!"
        else
          echo "ℹ️ No file changes detected, skipping commit"
          echo "✅ Workflow completed, no updates needed"
        fi

    - name: Skip execution notice
      if: steps.check_benchmarks.outputs.has_benchmark_changes == 'false'
      run: |
        echo "ℹ️ No changes detected in .txt files in benchmarks directory"
        echo "✅ Workflow skipped execution, as expected"
